import React, { useState, useEffect } from 'react';
import { shallowEqual, useDispatch, useSelector } from 'react-redux';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { Skeleton } from '@mui/material';
import AccessTimeTwoToneIcon from '@mui/icons-material/AccessTimeTwoTone';
import PublicTwoToneIcon from '@mui/icons-material/PublicTwoTone';
import KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';

import DatePicker from '../../components/shared/DatePicker';
import { getAllEventType } from '../../store/actions/events';
import { AppState } from '../../store/types';

const BookEvent = () => {
  const dispatch = useDispatch();
  const router = useRouter();
  const { isLoading, eventType } = useSelector(
    (state: AppState) => state.events,
    shallowEqual
  );
  const [value, setValue] = useState<Date | null>(new Date());
  const [isSelectedValue, setIsSelectedValue] = useState(false);
  const [time, setTime] = useState(['10:00 am', '10:15 am', '10:30 am']);

  useEffect(() => {
    setIsSelectedValue(true);
  }, [value]);

  useEffect(() => {
    const user_id = localStorage.getItem('id');
    if (user_id !== null) {
      dispatch(getAllEventType(Number(user_id)));
    }
  }, []);

  return (
    <div className='flex items-center justify-center w-screen h-screen bg-secondary'>
      <Head>
        <title>{eventType?.duration}min | Emmanuel Dushime | Cal.com</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {isLoading && (
        <div className='flex flex-col items-center justify-around w-full h-full'>
          <Skeleton
            animation='wave'
            variant='rectangular'
            width='80%'
            height='30%'
          />
          <Skeleton
            animation='wave'
            variant='rectangular'
            width='80%'
            height='30%'
          />
        </div>
      )}
      {!isLoading && (
        <div
          className={`${
            isSelectedValue ? 'w-[80%]' : 'w-[60%]'
          }  h-[60%] bg-white border-8 border-secondary flex flex-row justify-between items-center`}
        >
          <div className='mx-5 border-r-2 border-secondary w-[30%] h-[90%] flex flex-col items-start'>
            <span className='text-gray-500'>Emmanuel Dushime</span>
            <span className='text-base font-bold'>{eventType?.name}</span>
            <div className='flex flex-row items-center justify-center mt-5 text-gray-500'>
              <AccessTimeTwoToneIcon className='mr-3' />
              <span>{eventType?.duration} minutes</span>
            </div>
            <div className='flex flex-row items-center justify-center mt-2 text-gray-500 cursor-pointer'>
              <PublicTwoToneIcon className='mr-3' />
              <span className='mr-3 '>Africa/Kigali</span>
              <KeyboardArrowDownOutlinedIcon />
            </div>
          </div>
          <div
            className={`${
              isSelectedValue ? 'w-[40%]' : 'w-[70%]'
            } h-full justify-center items-center flex`}
          >
            <DatePicker value={value} setValue={setValue} />
          </div>
          {isSelectedValue && (
            <div className='mx-5 border-l-2 border-secondary w-[30%] h-[90%] flex flex-col items-start pl-16'>
              <span className='my-3'>{value?.toDateString()}</span>
              {time.length &&
                time.map((slug, index) => (
                  <button
                    className='px-3 py-2 border-2 border-black w-[80%] hover:bg-primary hover:text-white flex justify-center items-center cursor-pointer my-2'
                    key={index}
                    type='button'
                    onClick={() => {
                      localStorage.setItem('date', `${value}`);
                      localStorage.setItem('time', slug);
                      router.push({
                        pathname: '/dushimeemma/book',
                        query: { date: `${value}` },
                      });
                    }}
                  >
                    {slug}
                  </button>
                ))}
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default BookEvent;
